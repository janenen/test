25c25
< #define _TIMED_ 1
---
> #define _TIMED_ 0
38,40c38
<   lives=3;
< 	 mvaddstr(height-3, width/2-13, "enter difficulty(1-9): "); 
<    difficulty=getch()-'0'; 
---
> 
46,47c44
<      if (rand() % difficulty == 0)
< 	//if (rand() % 5 == 0) 
---
>     if (rand() % 5 == 0) 
85,86d81
<   rtime=120;
<   stime=time(NULL);
101c96
<   
---
>   /*
113c108
<     addch('.');
---
>     addch('x');
116c111
<        
---
>        */
175,176c170
<   mvaddstr(height/2+5, 0, text);
<   
---
>   mvaddstr(height/2+5, 0, text);  
179d172
<   
217c210
< void Starfield::TestCollision() //const
---
> void Starfield::TestCollision() const
219d211
< 	if(asteroids[C.GetY()*width+C.GetX()] == '*'&&!--lives)	GameOver();
251,252c243,244
<   printw("lives: %i ", lives);
<   printw("time: %i ", rtime);
---
>   printw("lives: %i ", 3);
>   printw("time: %i ", 120);
294d285
<       CheckTime();
298d288
<      
304,308d293
< }
< void Starfield::CheckTime()
< {
<  rtime=120-(time(NULL)-stime);
<      if(rtime<0)GameOver();
30d29
<  
36d34
<   
39d36
< 
